{"ast":null,"code":"var _jsxFileName = \"/Users/hargurjeet.kaur/Desktop/workspace/newProject/game/src/ItemGrid.tsx\";\nimport React from 'react';\n\n/*<GridItem id={item.id} image={item.image} clicked={() => props.clickedItem}/>*/\nexport const GridItem = props => React.createElement(\"img\", {\n  key: props.id,\n  alt: props.image,\n  src: props.image,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n});\n\nconst ItemGrid = props => {\n  return React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.data.map(item => React.createElement(\"img\", {\n    onClick: () => {\n      props.clickedItem(item);\n    },\n    key: item.id,\n    alt: item.image,\n    style: {\n      width: '25%'\n    },\n    src: item.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n};\n\nexport default ItemGrid;","map":{"version":3,"sources":["/Users/hargurjeet.kaur/Desktop/workspace/newProject/game/src/ItemGrid.tsx"],"names":["React","GridItem","props","id","image","ItemGrid","flex","data","map","item","clickedItem","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AASA;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IACtB;AAAK,EAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AACI,EAAA,GAAG,EAAED,KAAK,CAACE,KADf;AAEI,EAAA,GAAG,EAAEF,KAAK,CAACE,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADK;;AAKP,MAAMC,QAAQ,GAAIH,KAAD,IAAyB;AACxC,SAAO;AAAK,IAAA,KAAK,EAAE;AAACI,MAAAA,IAAI,EAAE;AAAP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJJ,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAgBC,IAAD,IACd;AAAK,IAAA,OAAO,EAAE,MAAM;AAACP,MAAAA,KAAK,CAACQ,WAAN,CAAkBD,IAAlB;AAAwB,KAA7C;AACA,IAAA,GAAG,EAAEA,IAAI,CAACN,EADV;AAEA,IAAA,GAAG,EAAEM,IAAI,CAACL,KAFV;AAGA,IAAA,KAAK,EAAE;AAACO,MAAAA,KAAK,EAAE;AAAR,KAHP;AAIA,IAAA,GAAG,EAAEF,IAAI,CAACL,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADI,CAAP;AASD,CAVD;;AAYA,eAAeC,QAAf","sourcesContent":["import React from 'react';\nimport { ItemType } from './types';\n\nexport interface ItemGridProp{\n  data: ItemType[]\n  clickedItem: any\n}\n\n\n/*<GridItem id={item.id} image={item.image} clicked={() => props.clickedItem}/>*/\n\nexport const GridItem = (props: ItemType) => (\n  <img key={props.id} \n      alt={props.image} \n      src={props.image}/>\n)\nconst ItemGrid = (props: ItemGridProp) => {\n  return <div style={{flex: 1}}>\n    {props.data.map((item: ItemType) => (\n      <img onClick={() => {props.clickedItem(item)}} \n      key={item.id} \n      alt={item.image} \n      style={{width: '25%'}} \n      src={item.image}/>)\n      )}\n  </div>\n}\n\nexport default ItemGrid"]},"metadata":{},"sourceType":"module"}