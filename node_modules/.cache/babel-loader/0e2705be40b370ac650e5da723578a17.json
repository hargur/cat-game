{"ast":null,"code":"var _jsxFileName = \"/Users/hargurjeet.kaur/Desktop/workspace/newProject/game/src/ItemGrid.tsx\";\nimport React, { useRef } from 'react';\n\nconst ItemGrid = props => {\n  const imageRef = useRef(null);\n\n  const handlImageClick = e => {\n    console.log(e);\n    const newEL = React.cloneElement(imageRef, {});\n    props.clickedItem(newEL);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.data.map(item => React.createElement(\"img\", {\n    ref: imageRef,\n    onClick: handlImageClick,\n    key: item.id,\n    alt: item.image,\n    style: {\n      width: '25%'\n    },\n    src: item.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })));\n};\n\nexport default ItemGrid;","map":{"version":3,"sources":["/Users/hargurjeet.kaur/Desktop/workspace/newProject/game/src/ItemGrid.tsx"],"names":["React","useRef","ItemGrid","props","imageRef","handlImageClick","e","console","log","newEL","cloneElement","clickedItem","flex","data","map","item","id","image","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;AAOA,MAAMC,QAAQ,GAAIC,KAAD,IAAyB;AACxC,QAAMC,QAAQ,GAAGH,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAMI,eAAe,GAAIC,CAAD,IAAY;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMG,KAAK,GAAGT,KAAK,CAACU,YAAN,CAAmBN,QAAnB,EAA6B,EAA7B,CAAd;AACAD,IAAAA,KAAK,CAACQ,WAAN,CAAkBF,KAAlB;AACD,GAJD;;AAKA,SAAO;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,IAAI,EAAE;AAAP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJT,KAAK,CAACU,IAAN,CAAWC,GAAX,CAAgBC,IAAD,IACd;AAAK,IAAA,GAAG,EAAEX,QAAV;AAAoB,IAAA,OAAO,EAAEC,eAA7B;AACA,IAAA,GAAG,EAAEU,IAAI,CAACC,EADV;AAEA,IAAA,GAAG,EAAED,IAAI,CAACE,KAFV;AAGA,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAHP;AAIA,IAAA,GAAG,EAAEH,IAAI,CAACE,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADI,CAAP;AASD,CAjBD;;AAmBA,eAAef,QAAf","sourcesContent":["import React, { useRef } from 'react';\nimport { ItemType } from './types';\n\nexport interface ItemGridProp{\n  data: ItemType[]\n  clickedItem: (value: any) => {}\n}\nconst ItemGrid = (props: ItemGridProp) => {\n  const imageRef = useRef(null)\n\n  const handlImageClick = (e: any) => {\n    console.log(e);\n    const newEL = React.cloneElement(imageRef, {})\n    props.clickedItem(newEL)\n  }\n  return <div style={{flex: 1}}>\n    {props.data.map((item: ItemType) => \n      <img ref={imageRef} onClick={handlImageClick} \n      key={item.id} \n      alt={item.image} \n      style={{width: '25%'}} \n      src={item.image}/>\n      )}\n  </div>\n}\n\nexport default ItemGrid"]},"metadata":{},"sourceType":"module"}