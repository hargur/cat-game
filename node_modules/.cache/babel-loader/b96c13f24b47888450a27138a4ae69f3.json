{"ast":null,"code":"var _jsxFileName = \"/Users/hargurjeet.kaur/Desktop/workspace/newProject/game/src/ItemGrid.tsx\";\nimport React, { useRef } from 'react';\n\nconst ItemGrid = props => {\n  const imageRef = useRef(null);\n  return React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.data.map(item => React.createElement(\"img\", {\n    ref: imageRef,\n    onClick: e => {\n      console.log(e), props.clickedItem(this.clone());\n    },\n    key: item.id,\n    alt: item.image,\n    style: {\n      width: '25%'\n    },\n    src: item.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })));\n};\n\nexport default ItemGrid;","map":{"version":3,"sources":["/Users/hargurjeet.kaur/Desktop/workspace/newProject/game/src/ItemGrid.tsx"],"names":["React","useRef","ItemGrid","props","imageRef","flex","data","map","item","e","console","log","clickedItem","clone","id","image","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;AAOA,MAAMC,QAAQ,GAAIC,KAAD,IAAyB;AACxC,QAAMC,QAAQ,GAAGH,MAAM,CAAC,IAAD,CAAvB;AAEA,SAAO;AAAK,IAAA,KAAK,EAAE;AAACI,MAAAA,IAAI,EAAE;AAAP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJF,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAgBC,IAAD,IAAoB;AAAK,IAAA,GAAG,EAAEJ,QAAV;AAAoB,IAAA,OAAO,EAAGK,CAAD,IAAO;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,GAAeN,KAAK,CAACS,WAAN,CAAkB,KAAKC,KAAL,EAAlB,CAAf;AAA+C,KAApF;AAAsF,IAAA,GAAG,EAAEL,IAAI,CAACM,EAAhG;AAAoG,IAAA,GAAG,EAAEN,IAAI,CAACO,KAA9G;AAAqH,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAA5H;AAA4I,IAAA,GAAG,EAAER,IAAI,CAACO,KAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,CADI,CAAP;AAGD,CAND;;AAQA,eAAeb,QAAf","sourcesContent":["import React, { useRef } from 'react';\nimport { ItemType } from './types';\n\nexport interface ItemGridProp{\n  data: ItemType[]\n  clickedItem: (value) => {}\n}\nconst ItemGrid = (props: ItemGridProp) => {\n  const imageRef = useRef(null)\n\n  return <div style={{flex: 1}}>\n    {props.data.map((item: ItemType) => <img ref={imageRef} onClick={(e) => {console.log(e),props.clickedItem(this.clone())}} key={item.id} alt={item.image} style={{width: '25%'}} src={item.image}/>)}\n  </div>\n}\n\nexport default ItemGrid"]},"metadata":{},"sourceType":"module"}